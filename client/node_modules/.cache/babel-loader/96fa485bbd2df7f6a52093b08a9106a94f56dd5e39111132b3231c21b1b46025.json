{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import toast from 'react-hot-toast';\n\n// function DoctorDashboard() {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     const fetchAppointments = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const userId = localStorage.getItem('userId');\n//         const res = await axios.get(`http://127.0.0.1:5000/api/user/appointments?doctorId=${userId}`, {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//         console.log(res);\n//         if (res.data.success) {\n//           setAppointments(res.data.data);\n//         } else {\n//           toast.error('Failed to fetch appointments');\n//         }\n//       } catch (error) {\n//         console.error(error);\n//         toast.error('Server Error');\n//       }\n//     };\n\n//     fetchAppointments();\n//   }, []);\n\n//   const handleAccept = async (appointmentId) => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const res = await axios.put(`http://127.0.0.1:5000/api/user/appointment/${appointmentId}/accept`, {}, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       if (res.data.success) {\n//         toast.success('Appointment accepted');\n//         setAppointments(appointments.map(app => app._id === appointmentId ? { ...app, status: 'accepted' } : app));\n//       } else {\n//         toast.error('Failed to accept appointment');\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       toast.error('Server Error');\n//     }\n//   };\n\n//   const handleReject = async (appointmentId) => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const res = await axios.put(`http://127.0.0.1:5000/api/user/appointment/${appointmentId}/reject`, {}, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       if (res.data.success) {\n//         toast.success('Appointment rejected');\n//         setAppointments(appointments.map(app => app._id === appointmentId ? { ...app, status: 'rejected' } : app));\n//       } else {\n//         toast.error('Failed to reject appointment');\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       toast.error('Server Error');\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n//       <h1 style={{ textAlign: 'center', color: '#333' }}>Appointments</h1>\n//       {appointments.length > 0 ? (\n//         <ul style={{ listStyleType: 'none', padding: 0 }}>\n//           {appointments.map((appointment) => (\n//             <li key={appointment._id} style={{ border: '1px solid #ccc', margin: '10px 0', padding: '10px', borderRadius: '5px' }}>\n//               <p style={{ margin: '5px 0' }}><strong>Date:</strong> {appointment.date}</p>\n//               <p style={{ margin: '5px 0' }}><strong>Patient:</strong> {appointment.patient.name}</p>\n//               <p style={{ margin: '5px 0' }}><strong>Status:</strong> {appointment.status}</p>\n//               <div style={{ marginTop: '10px' }}>\n//                 {appointment.status === 'pending' && (\n//                   <>\n//                     <button onClick={() => handleAccept(appointment._id)} style={{ marginRight: '10px' }}>Accept</button>\n//                     <button onClick={() => handleReject(appointment._id)}>Reject</button>\n//                   </>\n//                 )}\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <p style={{ textAlign: 'center', color: '#999' }}>No appointments available</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default DoctorDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/Sujit Solav/Desktop/MERN Projects/DoctorAppointment/client/src/pages/Doctor.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import toast from 'react-hot-toast';\r\n\r\n// function DoctorDashboard() {\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchAppointments = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const userId = localStorage.getItem('userId');\r\n//         const res = await axios.get(`http://127.0.0.1:5000/api/user/appointments?doctorId=${userId}`, {\r\n//           headers: { Authorization: `Bearer ${token}` }\r\n//         });\r\n//         console.log(res);\r\n//         if (res.data.success) {\r\n//           setAppointments(res.data.data);\r\n//         } else {\r\n//           toast.error('Failed to fetch appointments');\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//         toast.error('Server Error');\r\n//       }\r\n//     };\r\n\r\n//     fetchAppointments();\r\n//   }, []);\r\n\r\n//   const handleAccept = async (appointmentId) => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const res = await axios.put(`http://127.0.0.1:5000/api/user/appointment/${appointmentId}/accept`, {}, {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       if (res.data.success) {\r\n//         toast.success('Appointment accepted');\r\n//         setAppointments(appointments.map(app => app._id === appointmentId ? { ...app, status: 'accepted' } : app));\r\n//       } else {\r\n//         toast.error('Failed to accept appointment');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       toast.error('Server Error');\r\n//     }\r\n//   };\r\n\r\n//   const handleReject = async (appointmentId) => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const res = await axios.put(`http://127.0.0.1:5000/api/user/appointment/${appointmentId}/reject`, {}, {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       if (res.data.success) {\r\n//         toast.success('Appointment rejected');\r\n//         setAppointments(appointments.map(app => app._id === appointmentId ? { ...app, status: 'rejected' } : app));\r\n//       } else {\r\n//         toast.error('Failed to reject appointment');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       toast.error('Server Error');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n//       <h1 style={{ textAlign: 'center', color: '#333' }}>Appointments</h1>\r\n//       {appointments.length > 0 ? (\r\n//         <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n//           {appointments.map((appointment) => (\r\n//             <li key={appointment._id} style={{ border: '1px solid #ccc', margin: '10px 0', padding: '10px', borderRadius: '5px' }}>\r\n//               <p style={{ margin: '5px 0' }}><strong>Date:</strong> {appointment.date}</p>\r\n//               <p style={{ margin: '5px 0' }}><strong>Patient:</strong> {appointment.patient.name}</p>\r\n//               <p style={{ margin: '5px 0' }}><strong>Status:</strong> {appointment.status}</p>\r\n//               <div style={{ marginTop: '10px' }}>\r\n//                 {appointment.status === 'pending' && (\r\n//                   <>\r\n//                     <button onClick={() => handleAccept(appointment._id)} style={{ marginRight: '10px' }}>Accept</button>\r\n//                     <button onClick={() => handleReject(appointment._id)}>Reject</button>\r\n//                   </>\r\n//                 )}\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       ) : (\r\n//         <p style={{ textAlign: 'center', color: '#999' }}>No appointments available</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DoctorDashboard;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}